---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: "{{.POSTGREST_NAME}}"
spec:
  selector:
    matchLabels:
      name: "{{.POSTGREST_NAME}}"
  replicas: 3
  revisionHistoryLimit: 3
  template:
    metadata:
      labels:
        name: "{{.POSTGREST_NAME}}"
    spec:
      securityContext:
        runAsUser: 1000
        fsGroup: 1000
      containers:
      - name: {{.POSTGREST_NAME}}-proxy
        image: "{{.NGINX_IMAGE}}:{{.NGINX_TAG}}"
        env:
        - name: PROXY_SERVICE_HOST
          value: "127.0.0.1"
        - name: PROXY_SERVICE_PORT
          value: "3000"
        - name: ENABLE_UUID_PARAM
          value: "FALSE"
        - name: LOG_FORMAT_NAME
          value: 'json'
        - name: NAXSI_USE_DEFAULT_RULES
          value: "FALSE"
        - name: STATSD_METRICS
          value: "FALSE"
        - name: ADD_NGINX_LOCATION_CFG
          value: |
            client_max_body_size      300m;
        ports:
        - name: https
          containerPort: 10443
        volumeMounts:
          - name: certs
            mountPath: /certs
      - name: "{{.POSTGREST_NAME}}"
        image: "{{.POSTGREST_IMAGE}}:{{.POSTGREST_TAG}}"
        imagePullPolicy: Always
        env:
        - name: POSTGREST_NAME
          value: "{{.POSTGREST_NAME}}"
        - name: PGRST_DB_URI
          valueFrom:
            secretKeyRef:
              name: {{.POSTGREST_NAME}}
              key: dbUri
        - name: PGRST_DB_SCHEMA
          value: "{{.DB_REF_REFERENCE_SCHEMA}}"
        - name: PGRST_DB_ANON_ROLE
          value: "{{.DB_REF_REFERENCE_ANON_USERNAME}}"
        - name: PGRST_SERVER_PROXY_URI
          value: "http://127.0.0.1:3000/"
        - name: PGRST_JWT_SECRET
          valueFrom:
            secretKeyRef:
              name: {{.POSTGREST_NAME}}
              key: jwtSecret
        securityContext:
          runAsNonRoot: true
        readinessProbe:
          httpGet:
            path: /
            port: 3000
            scheme: HTTP
          initialDelaySeconds: 20
          periodSeconds: 10
        livenessProbe:
          httpGet:
            path: /
            port: 3000
            scheme: HTTP
          initialDelaySeconds: 20
          periodSeconds: 10
      volumes:
      - name: certs
        secret:
          secretName: "{{.POSTGREST_NAME}}-pod-cmio"
